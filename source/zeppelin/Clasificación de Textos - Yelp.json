{"paragraphs":[{"text":"%md\n# Clasificación de Textos - Yelp!\n\n## Introducción\nEn este Notebook se realiza una clasificación de textos del dataset de Yelp!.\nDe este dataset, se utiliza el fichero review.json el cual contiene el conjunto de opiniones de los distintos clientes y el número de \"estrellas\" asignados. El objetivo es a partir del texto poder predecir el número de estrellas a asignar, lo cual corresponde a una clasificación basada en el sentimiento.","user":"anonymous","dateUpdated":"2019-07-22T14:48:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Clasificación de Textos - Yelp!</h1>\n<h2>Introducción</h2>\n<p>En este Notebook se realiza una clasificación de textos del dataset de Yelp!.<br/>De este dataset, se utiliza el fichero review.json el cual contiene el conjunto de opiniones de los distintos clientes y el número de &ldquo;estrellas&rdquo; asignados. El objetivo es a partir del texto poder predecir el número de estrellas a asignar, lo cual corresponde a una clasificación basada en el sentimiento.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806858597_996943594","id":"20190722-144738_1737561871","dateCreated":"2019-07-22T14:47:38+0000","dateStarted":"2019-07-22T14:48:50+0000","dateFinished":"2019-07-22T14:48:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10015"},{"text":"%md\n## Desarrollos","user":"anonymous","dateUpdated":"2019-07-22T14:49:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Desarrollos</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806942314_303771066","id":"20190722-144902_191725367","dateCreated":"2019-07-22T14:49:02+0000","dateStarted":"2019-07-22T14:49:11+0000","dateFinished":"2019-07-22T14:49:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10016"},{"text":"%md\n### Pre-processing\nSe realiza le pre-procesamiento de la información, el cual está dividido en:\n\nLectura del dataset\nSelección de variables\nEliminación de catacteres especiales y paso a lowercase\n","user":"anonymous","dateUpdated":"2019-07-22T14:49:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Pre-processing</h3>\n<p>Se realiza le pre-procesamiento de la información, el cual está dividido en:</p>\n<p>Lectura del dataset<br/>Selección de variables<br/>Eliminación de catacteres especiales y paso a lowercase</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806972359_7659668","id":"20190722-144932_154089826","dateCreated":"2019-07-22T14:49:32+0000","dateStarted":"2019-07-22T14:49:40+0000","dateFinished":"2019-07-22T14:49:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10017"},{"text":"import org.apache.spark.ml.{PipelineModel, Pipeline}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.DataFrame","user":"anonymous","dateUpdated":"2019-07-22T14:40:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563805375150_1470694872","id":"20190722-142255_1571162744","dateCreated":"2019-07-22T14:22:55+0000","dateStarted":"2019-07-22T14:40:16+0000","dateFinished":"2019-07-22T14:40:18+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10018"},{"text":"def evaluate(model: PipelineModel, test: DataFrame): Unit = {\n    // Select (prediction, true label) and compute test error.\n    val evaluator = new MulticlassClassificationEvaluator()\n      .setLabelCol(\"label\")\n      .setPredictionCol(\"prediction\")\n      .setMetricName(\"accuracy\")\n    // Make predictions.\n    val predictions = model.transform(test)\n\n    println(s\"Test set accuracy = ${evaluator.evaluate(predictions)}\")\n}","user":"anonymous","dateUpdated":"2019-07-22T14:27:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563805371137_-1751225575","id":"20190722-142251_1633935191","dateCreated":"2019-07-22T14:22:51+0000","dateStarted":"2019-07-22T14:27:05+0000","dateFinished":"2019-07-22T14:27:06+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10019"},{"text":"def readData(path: String): (DataFrame, DataFrame) = {\n    import spark.sqlContext.implicits._\n    val data =spark.read.json(path)\n        .select(\"text\", \"stars\")\n        .withColumnRenamed(\"stars\", \"label\").cache()\n        .rdd\n        .map{\n            row =>\n                val t = row.getAs[String](\"text\")\n                val label = row.getAs[Double](\"label\")\n                (t.toLowerCase.replaceAll(\"-?|\\\\/#@!\", \"\").split(\" \"), label)\n        }\n        .toDF(\"text\", \"label\")\n\n    val Array(training, test) = data.randomSplit(Array(0.8, 0.2), seed = 12345)\n    return (training, test)\n}","user":"anonymous","dateUpdated":"2019-07-22T14:31:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563805594351_-60347343","id":"20190722-142634_1278944324","dateCreated":"2019-07-22T14:26:34+0000","dateStarted":"2019-07-22T14:31:41+0000","dateFinished":"2019-07-22T14:31:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10020"},{"text":"%md\n### Vectorización\nA continuación, se generan los algoritmos de vectorización que son el hashingTF y el IDF, con el objetivo de usarlos luego en el Pipeline a crear para cada uno de los modelos","user":"anonymous","dateUpdated":"2019-07-22T14:42:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","title":false,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Vectorización</h3>\n<p>A continuación, se generan los algoritmos de vectorización que son el hashingTF y el IDF, con el objetivo de usarlos luego en el Pipeline a crear para cada uno de los modelos</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1563805969339_-819734716","id":"20190722-143249_1845739246","dateCreated":"2019-07-22T14:32:49+0000","dateStarted":"2019-07-22T14:42:35+0000","dateFinished":"2019-07-22T14:42:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10021"},{"text":"import org.apache.spark.ml.feature.{HashingTF, IDF}\n","user":"anonymous","dateUpdated":"2019-07-22T14:39:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806338710_-1430471326","id":"20190722-143858_1508114827","dateCreated":"2019-07-22T14:38:58+0000","dateStarted":"2019-07-22T14:39:19+0000","dateFinished":"2019-07-22T14:39:22+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10022"},{"text":"val hashingTF = new HashingTF()\n      .setInputCol(\"text\")\n      .setOutputCol(\"countvec\")\n\n\nval idf = new IDF()\n  .setInputCol(hashingTF.getOutputCol)\n  .setOutputCol(\"features\")","user":"anonymous","dateUpdated":"2019-07-22T14:39:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563805781867_1844956162","id":"20190722-142941_1013323627","dateCreated":"2019-07-22T14:29:41+0000","dateStarted":"2019-07-22T14:39:22+0000","dateFinished":"2019-07-22T14:39:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10023"},{"text":"val (training, test) = readData(\"\")","user":"anonymous","dateUpdated":"2019-07-22T14:41:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806478738_-1570272773","id":"20190722-144118_799777284","dateCreated":"2019-07-22T14:41:18+0000","dateStarted":"2019-07-22T14:41:37+0000","dateFinished":"2019-07-22T14:41:43+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10024"},{"text":"%md\n### Algoritmos","user":"anonymous","dateUpdated":"2019-07-22T14:42:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Algoritmos</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806207174_-1222227866","id":"20190722-143647_1184574382","dateCreated":"2019-07-22T14:36:47+0000","dateStarted":"2019-07-22T14:42:42+0000","dateFinished":"2019-07-22T14:42:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10025"},{"text":"%md\n#### Naive Bayes","user":"anonymous","dateUpdated":"2019-07-22T14:42:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Naive Bayes</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806229407_-1288918806","id":"20190722-143709_596297085","dateCreated":"2019-07-22T14:37:09+0000","dateStarted":"2019-07-22T14:42:47+0000","dateFinished":"2019-07-22T14:42:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10026"},{"text":"import org.apache.spark.ml.classification.NaiveBayes\n","user":"anonymous","dateUpdated":"2019-07-22T14:40:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806386203_-2035590602","id":"20190722-143946_1797710960","dateCreated":"2019-07-22T14:39:46+0000","dateStarted":"2019-07-22T14:40:19+0000","dateFinished":"2019-07-22T14:40:20+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10027"},{"text":"val nb = new NaiveBayes()\n      .setModelType(\"multinomial\")\n\nval pipeline = new Pipeline()\n  .setStages(Array(hashingTF,idf, nb))\n\nval model = pipeline.fit(training)\n\nevaluate(model, test)","user":"anonymous","dateUpdated":"2019-07-22T14:40:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806253520_-1178908849","id":"20190722-143733_2029638280","dateCreated":"2019-07-22T14:37:33+0000","dateStarted":"2019-07-22T14:40:22+0000","dateFinished":"2019-07-22T14:40:24+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10028"},{"text":"%md\n#### Logistic Regression","user":"anonymous","dateUpdated":"2019-07-22T14:43:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Logistic Regression</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806312080_-5729329","id":"20190722-143832_660565610","dateCreated":"2019-07-22T14:38:32+0000","dateStarted":"2019-07-22T14:43:18+0000","dateFinished":"2019-07-22T14:43:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10029"},{"text":"import org.apache.spark.ml.classification.LogisticRegression","user":"anonymous","dateUpdated":"2019-07-22T14:43:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806597980_1103235357","id":"20190722-144317_1440665567","dateCreated":"2019-07-22T14:43:17+0000","dateStarted":"2019-07-22T14:43:34+0000","dateFinished":"2019-07-22T14:43:37+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10030"},{"text":"val lr = new LogisticRegression()\n      .setMaxIter(100)\n\nval pipeline = new Pipeline()\n  .setStages(Array(hashingTF,idf, lr))\n\nval model = pipeline.fit(training)\n\nevaluate(model, test)","user":"anonymous","dateUpdated":"2019-07-22T14:45:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806627257_-1337866239","id":"20190722-144347_977088763","dateCreated":"2019-07-22T14:43:47+0000","dateStarted":"2019-07-22T14:45:01+0000","dateFinished":"2019-07-22T14:45:02+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10031"},{"text":"%md\n#### Random Forest","user":"anonymous","dateUpdated":"2019-07-22T14:45:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Random Forest</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1563806705833_64200042","id":"20190722-144505_1578128843","dateCreated":"2019-07-22T14:45:05+0000","dateStarted":"2019-07-22T14:45:33+0000","dateFinished":"2019-07-22T14:45:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10032"},{"text":"import org.apache.spark.ml.classification.RandomForestClassifier","user":"anonymous","dateUpdated":"2019-07-22T14:46:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.classification.RandomForestClassifier\n"}]},"apps":[],"jobName":"paragraph_1563806613827_1075733674","id":"20190722-144333_1471231056","dateCreated":"2019-07-22T14:43:33+0000","dateStarted":"2019-07-22T14:46:34+0000","dateFinished":"2019-07-22T14:46:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10033"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806987106_564745960","id":"20190722-144947_1153183681","dateCreated":"2019-07-22T14:49:47+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11530"},{"text":"val rf = new RandomForestClassifier()\n      .setMaxIter(100)\n\nval pipeline = new Pipeline()\n  .setStages(Array(hashingTF,idf, rf))\n\nval model = pipeline.fit(training)\n\nevaluate(model, test)","user":"anonymous","dateUpdated":"2019-07-22T14:47:13+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563806763785_-460432727","id":"20190722-144603_1880663618","dateCreated":"2019-07-22T14:46:03+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:10034"}],"name":"Clasificación de Textos - Yelp","id":"2EFRZ9W5D","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"simple","personalizedMode":"false"},"info":{}}